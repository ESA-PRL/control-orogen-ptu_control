name "ptu_control"
# Optionally declare the version number
# version "0.1"

# If new data types need to be defined, they have to be put in a separate C++
# header, and this header will be loaded here
#import_types_from "ptu_controlTypes.hpp"
# Finally, it is pretty common that headers are directly loaded from an external
# library. In this case, the library must be first used (the name is the
# library's pkg-config name) and then the header can be used. Following Rock
# conventions, a common use-case would be:

# If this project uses data types that are defined in other oroGen projects,
# these projects should be imported there as well.
import_types_from "base"

# Declare a new task context (i.e., a component)
#
# The corresponding C++ class can be edited in tasks/Task.hpp and
# tasks/Task.cpp, and will be put in the ptu_control namespace.
task_context "Task" do
    # This is the default from now on, and should not be removed. Rock will
    # transition to a setup where all components use a configuration step.
    needs_configuration

    #*************************
    #**** Task Properties ****
    #*************************
    property('mast2tilt_link', 'double').
        doc 'Link distance between mast top point and tilt motor axle. Required to compute the mast2ptu tranformation'

    property('ptu_source_frame', '/std/string').doc 'From Frame for the transformer'

    property('ptu_target_frame', '/std/string').doc 'To Frame for the transformer'

    property('ptu_reading_names', 'std/vector<std/string>').
	doc 'PTU joints are selected by names.'

    property('ptu_commanding_names', 'std/vector<std/string>').
	doc 'PTU joints are selected by names.'

    #******************************
    #******* Input ports  *********
    #******************************
    input_port('ptu_rbs_commands', '/base/samples/RigidBodyState').
        doc 'provides timestamped PTU orientation commands with respect to the ptu_source_frame which is the mast.'

    input_port('ptu_joints_commands', '/base/commands/Joints').
        doc 'provides timestamped PTU joints commands to directly send to the dispatcher or driver.'

    input_port('ptu_samples', '/base/samples/Joints').
	doc 'Timestamped ptu joints samples readings.'


    #******************************
    #******* Output Ports *********
    #******************************
    output_port('ptu_commands_out', '/base/commands/Joints').
	doc 'Timestamped ptu joints commands.'

    output_port('mast_to_ptu_out', 'base/samples/RigidBodyState').
	doc 'Transformation for the transformer: Pan and Tilt Unit (PTU) frame expressed in the mast frame.'

    port_driven

end

